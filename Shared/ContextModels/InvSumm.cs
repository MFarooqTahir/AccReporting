// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using AccReporting.Shared.Helpers;

using MySqlConnector;

using System;
using System.Collections.Generic;
using System.Diagnostics;

namespace AccReporting.Shared.ContextModels
{
    public partial class InvSumm
    {
        public InvSumm(string[] x)
        {
            try
            {

                OrderNo = MySqlHelper.EscapeString(x[0]);
                InvNo = ValOrDefault.ToInt(MySqlHelper.EscapeString(x[1]));
                InvDate = ValOrDefault.ToDateTime(MySqlHelper.EscapeString(x[2]));
                Pcode = MySqlHelper.EscapeString(x[3]);
                Pname = MySqlHelper.EscapeString(x[4]);
                TotBill = ValOrDefault.ToDouble(MySqlHelper.EscapeString(x[5]));
                Built = ValOrDefault.ToDouble(MySqlHelper.EscapeString(x[6]));
                DisPer = ValOrDefault.ToDouble(MySqlHelper.EscapeString(x[7]));
                Dis = ValOrDefault.ToDouble(MySqlHelper.EscapeString(x[8]));
                Ser = ValOrDefault.ToDouble(MySqlHelper.EscapeString(x[9]));
                Remarks = MySqlHelper.EscapeString(x[10]);
                Cartage = ValOrDefault.ToDouble(MySqlHelper.EscapeString(x[11]));
                AddLess = ValOrDefault.ToDouble(MySqlHelper.EscapeString(x[12]));
                CrDays = ValOrDefault.ToInt(MySqlHelper.EscapeString(x[13]));
                DueDate = ValOrDefault.ToDateTime(MySqlHelper.EscapeString(x[14]));
                RefNo = MySqlHelper.EscapeString(x[15]);
                Payment = MySqlHelper.EscapeString(x[16]);
                Note = MySqlHelper.EscapeString(x[17]);
                Delivery = MySqlHelper.EscapeString(x[18]);
                Hcode = ValOrDefault.ToInt(MySqlHelper.EscapeString(x[19]));
            }
            catch (IndexOutOfRangeException ex)
            {

#if DEBUG
                Debug.WriteLine(ex.Message + " " + ex.InnerException + " " + ex.StackTrace);
#endif
            }
        }
        public InvSumm()
        {

        }
        public int Idpr { get; set; }
        public string OrderNo { get; set; }
        public int? InvNo { get; set; }
        public DateTime? InvDate { get; set; }
        public string Pcode { get; set; }
        public string Pname { get; set; }
        public double? TotBill { get; set; }
        public double? Built { get; set; }
        public double? DisPer { get; set; }
        public double? Dis { get; set; }
        public double? Ser { get; set; }
        public string Remarks { get; set; }
        public string Type { get; set; }
        public double? Cartage { get; set; }
        public double? AddLess { get; set; }
        public int? CrDays { get; set; }
        public DateTime? DueDate { get; set; }
        public string RefNo { get; set; }
        public string Payment { get; set; }
        public string Note { get; set; }
        public string Delivery { get; set; }
        public int? Hcode { get; set; }

        public string ToInsert()
        {
            return $"('{OrderNo}',{InvNo ?? 0},'{(InvDate ?? DateTime.MinValue):yyyy-MM-dd HH:mm:ss}','{Pcode}','{Pname}',{TotBill ?? 0},{Built ?? 0},{DisPer ?? 0},{Dis ?? 0},{Ser ?? 0},'{Remarks}',{Cartage ?? 0},{AddLess ?? 0},{CrDays ?? 0},'{(DueDate??DateTime.MinValue):yyyy-MM-dd HH:mm:ss}','{RefNo}','{Payment}','{Note}','{Delivery}',{Hcode ?? 0})";
        }
    }
}