@page "/register"
@using AccReporting.Client.Services
<h3 class="text-center">Registration</h3>

@if (ShowRegistrationErrors)
{
    <div class="alert alert-danger" role="alert">
        @foreach (var error in Errors)
        {
            <p>@error</p>
        }
    </div>
}
<div style="max-width:650px;" class="mx-auto">
<EditForm Model="_userForRegistration" OnValidSubmit="RegisterUser" class="card card-body bg-light mt-5">
    <DataAnnotationsValidator />
        <div class="form-group row mb-3">
        <label for="email" class="col-md-2 col-form-label">Email:</label>
        <div class="col-md-10">
            <InputText id="email" class="form-control" @bind-Value="_userForRegistration.Email" />
            <ValidationMessage For="@(() => _userForRegistration.Email)" />
        </div>
    </div>

        <div class="form-group row mb-3">
        <label for="password" class="col-md-2 col-form-label">Password:</label>
        <div class="col-md-10">
                <InputText type="@TxtType" id="password" class="form-control" @bind-Value="_userForRegistration.Password" />
            <ValidationMessage For="@(() => _userForRegistration.Password)" />
        </div>
    </div>

    <div class="form-group row">
        <label for="confirm" class="col-md-2 col-form-label">Confirm Password:</label>
        <div class="col-md-10">
                <InputText type="@TxtType" id="confirm" class="form-control" @bind-Value="_userForRegistration.ConfirmPassword" />
            <i class="far fa-eye" id="togglePassword" style="margin-left: -30px; cursor: pointer;"></i>
            <ValidationMessage For="@(() => _userForRegistration.ConfirmPassword)" />
        </div>
    </div>
        <Syncfusion.Blazor.Buttons.SfCheckBox @bind-Checked="@ShowPass" @onchange="@((e)=>ShowPassword())" CssClass="my-3 row"> Show Password</Syncfusion.Blazor.Buttons.SfCheckBox>

    <div class="row">
        <div class="col-md-12 text-right">
            <button type="submit" class="btn btn-success">Register</button>
        </div>
    </div>
</EditForm>
</div>
@code
{
        private UserForRegistrationDto _userForRegistration = new UserForRegistrationDto();
    [Inject]
    public IAuthenticationService AuthenticationService { get; set; }
    [Inject]
    public NavigationManager NavigationManager { get; set; }
    public bool ShowRegistrationErrors { get; set; }
    public IEnumerable<string> Errors { get; set; }
    public bool ShowPass { get; set; }
    public string TxtType = "password"; 
 
    public void ShowPassword() 
    { 
        if(this.TxtType== "password") 
        { 
            this.TxtType = "text"; 
        } 
        else 
        { 
            this.TxtType = "password"; 
        } 
    } 
    public async Task RegisterUser()
    {
        ShowRegistrationErrors = false;
        var result = await AuthenticationService.RegisterUser(_userForRegistration);
        if(!result.IsSuccessfulRegistration)
        {
            Errors = result.Errors;
            ShowRegistrationErrors = true;
        }
        else
        {
            NavigationManager.NavigateTo("/login");
        }
    }
}