@page "/SalesReport"
@using System.Globalization
@using AccReporting.Client.Components
@using AccReporting.Client.Services
@using AccReporting.Shared
@using Syncfusion.Blazor.Buttons
@inject IJSRuntime JS
@inject HttpClient Http
<AuthorizeView>
    <Authorized>
        <style>
            .e-export-pdf:before {
                content: '\e700';
                color: gray;
                font-size: 28px;
            }
        </style>
        <h3 class="text-center">Sales Report</h3>

        <SfTab @ref="@Tab" HeaderPlacement="HeaderPosition.Top" LoadOn="ContentLoad.Dynamic" OverflowMode="@OverflowMode.Scrollable">
            <TabItems>
                <TabItem>
                    <ChildContent>
                        <TabHeader Text="Sales"></TabHeader> @*Replace your required header1 text here *@
                    </ChildContent>
                    <ContentTemplate>
                        <SalesReportGrid Type="S"></SalesReportGrid>
                    </ContentTemplate>
                </TabItem>
                
                <TabItem>
                    @*Replace your required tab1 boby content here *@
                    <ChildContent>
                        <TabHeader Text="Purchase"></TabHeader> @*Replace your required header1 text here *@
                    </ChildContent>
                    <ContentTemplate>
                        <SalesReportGrid Type="P"></SalesReportGrid>
                    </ContentTemplate>
                </TabItem>
                <TabItem>
                    @*Replace your required tab2 boby content here *@
                    <ChildContent>
                        <TabHeader Text="Return"></TabHeader> @*Replace your required header2 text here *@
                    </ChildContent>
                    <ContentTemplate>
                        <SalesReportGrid Type="R"></SalesReportGrid>
                    </ContentTemplate>
                </TabItem>
                <TabItem>
                    @*Replace your required tab2 boby content here *@
                    <ChildContent>
                        <TabHeader Text="Estimate"></TabHeader> @*Replace your required header2 text here *@
                    </ChildContent>
                    <ContentTemplate>
                        <SalesReportGrid Type="E"></SalesReportGrid>
                    </ContentTemplate>
                </TabItem>

            </TabItems>
        </SfTab>

    </Authorized>
</AuthorizeView>
@code {
    public SfGrid<InvSummGridModel> defaultGrid = new();
    SfTab Tab { get; set; }
    public int pageNo { get; set; }
    public int totalPages { get; set; }
    public bool DisableBackIcon = false;
    public bool DisableForwardIcon = false;
    public bool DisableFirstIcon = false;
    public bool DisableLastIcon = false;
    [Inject]
    public HttpInterceptorService Interceptor { get; set; }
    public async Task OnCommandClicked(CommandClickEventArgs<InvSummGridModel> args)
    {
        var curr = args.RowData;
        var st = typesAll[curr.Type];
        var s = curr.InvNo.ToString();
        var res = await Http.GetFromJsonAsync<FileResponse>($"Reports/SalesReport?invNo={s}&type={st}");
        await JS.SaveAs(res.Name, res.File);
        //await JS.InvokeVoidAsync("open", $"Reports/SalesReport?invNo={s}&type={st}", "_blank");

    }
    
    private SalesReportInput model { get; set; } = new();
    public List<string> types = new List<string>
    {
       "Sale","Estimate","Purchase","Return",
    };
    private async Task OnGetReportClick(string invNo, string Type)
    {
        await JS.InvokeVoidAsync("open", $"Reports/SalesReport?invNo={invNo}&type={Type}", "_blank");
    }
    private readonly IDictionary<string, string> typesAll = new Dictionary<string, string>(StringComparer.InvariantCultureIgnoreCase)
    {
        {"S","Sale" },{"E","Estimate" },{"P","Purchase" },{"R","Return"}
    };
}

