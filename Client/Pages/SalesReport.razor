@page "/Reports"
@using AccReporting.Client.Components
@using AccReporting.Client.Services
<AuthorizeView>
    <Authorized>
        <style>
            .e-export-pdf:before {
                content: '\e700';
                color: gray;
                font-size: 28px;
            }
        </style>
        <h3 class="text-center">@title</h3>
        @if(SelectedItemIndex==0){
            <SalesReportGrid Type="S"></SalesReportGrid>
        }
        else if (SelectedItemIndex == 1)
        {
                 <SalesReportGrid Type="P"></SalesReportGrid>
        }
        else if (SelectedItemIndex == 2)
        {
            <SalesReportGrid Type="R"></SalesReportGrid>
        }
        else if (SelectedItemIndex == 3)
        {
            <SalesReportGrid Type="E"></SalesReportGrid>
        }
        else if (SelectedItemIndex == 4)
        {
            <SalesReportGrid Type="Q"></SalesReportGrid>
        }
        else if (SelectedItemIndex == 5)
        {
            <SalesReportGrid Type="C"></SalesReportGrid>
        }
        else{
            
            <h3>There was an error</h3>
        }

    </Authorized>
</AuthorizeView>
@code {
    public SfGrid<InvSummGridModel> DefaultGrid = new();
    string? _type = "",title="";
    [Parameter]
    [SupplyParameterFromQuery(Name = "Type")]
    public string? Type
    {
        get => _type;
        set 
        { 
            (SelectedItemIndex,title) = value switch
            {
                "Purchase"=>(1,"Purchase Invoice Report"),
                "Return"=>(2,"Return Invoice Report"),
                "Estimate"=>(3,"Estimate Report"),
                "PurchaseReturn"=>(4,"Purchase Return Invoice Report"),
                "Cash"=>(5,"Cash Invoice Report"),
                "Sale" or "" or _ =>(0,"Sales Invoice Report"),
                };
            _type = value;

        }
    }
    public int SelectedItemIndex { get; set; }
    public bool DisableBackIcon = false;
    public bool DisableForwardIcon = false;
    public bool DisableFirstIcon = false;
    public bool DisableLastIcon = false;
    [Inject]
    public HttpInterceptorService Interceptor { get; set; } = null!;
    
    private SalesReportInput Model { get; set; } = new();
    public List<string> Types = new()
    {
       "Sale","Estimate","Purchase","Return",
    };
    private readonly IDictionary<string, string> _typesAll = new Dictionary<string, string>(comparer: StringComparer.InvariantCultureIgnoreCase)
    {
        {"S","Sale" },{"E","Estimate" },{"P","Purchase" },{"R","Return"},{"Q","Purchase Return"},{"C","Cash"}
    };
}

